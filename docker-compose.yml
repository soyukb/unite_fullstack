version: "3"
services:
  # === Strapi Service ===
  strapi:
    container_name: strapi
    build:
      context: ./my-strapi-project
      dockerfile: Dockerfile
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./my-strapi-project/config:/opt/app/config
      - ./my-strapi-project/src:/opt/app/src
      - ./my-strapi-project/package.json:/opt/package.json
      - ./my-strapi-project/yarn.lock:/opt/yarn.lock
      - ./my-strapi-project/.env:/opt/app/.env
      - ./my-strapi-project/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - app-network
    depends_on:
      - strapiDB

  # === PostgreSQL for Strapi ===
  strapiDB:
    container_name: strapiDB
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./my-strapi-project/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # === Next.js Service ===
  nextjs:
    build:
      context: ./my-next-project-v2
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      - strapi

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/webroot:/var/www/certbot
    depends_on:
      - nextjs
      - strapi
      # - certbot
    networks:
      - app-network

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/webroot:/var/www/certbot
  # entrypoint: >
  #   sh -c "certbot certonly --webroot -w /var/www/certbot
  #   --email kobayashi.soyu@gmail.com --agree-tos --no-eff-email
  #   -d pokemonunitenews.jp"

  # entrypoint: >
  #   sh -c "certbot certonly --staging --webroot -w /var/www/certbot
  #   --email kobayashi.soyu@gmail.com --agree-tos --no-eff-email
  #   -d pokemonunitenews.jp"

networks:
  app-network:
    driver: bridge
